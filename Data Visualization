## #8 Data ****Visualization****

- replit - markdown
    
    https://replit.com/@tnsbieber/InvolvedUnwillingAnalyst#README.md
    
- Posit - rmarkdown
    
    new files → RMarkdown → package 
    

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/62b764cd-f8a9-4508-9e84-f8c548f32db1/0afc3625-47df-4bff-8ec0-ed0e5d067ba7/Untitled.png)

Let's create a histogram chart. -  hist(mtcars$mpg)

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/62b764cd-f8a9-4508-9e84-f8c548f32db1/63f457b9-da9d-493b-8d75-eb5474a04c9a/Untitled.png)

Tidyverse + ggthemes 

```r
library(tidyverse)
library(ggthemes)
#library ggplot2

#basic syntax

ggplot(data = mtcars,
       mapping = aes(x = mpg)) +
  geom_histogram()
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/62b764cd-f8a9-4508-9e84-f8c548f32db1/9cbe880e-8a4b-4dce-95ab-581ee847cc45/Untitled.png)

how to choose

1. data types
2. number of variables 
    1. ถ้าตัวแปรเดียวที่เป็นตัวเลข histogram, ตัวแปรเดียวเป็น factor ใช้ bar chart
        1. factor คือ ordinal (), norminal ()
    2. สองตัวแปรตัวเลขทั้งคู่ scatter plot, สองตัวแปรแต่ไม่ตัวเลขทั้งคู่ ใช้ bar chart 
3. [cheatsheet](https://github.com/rstudio/cheatsheets/blob/main/data-visualization.pdf) 

```r
#class "temp" cha
temp <- c("high", "medium", "low","low", "high")
temp

#class "temp2" ord, fac
temp2 <- factor(temp, 
        levels = c("low", "medium", "high"),
        order = TRUE)
```

DRY ไม่ควรเขียนโค้ดซ้ำ 

```r
ggplot(diamonds,
       aes(x=price)) +
  geom_histogram()

ggplot(diamonds,
       aes(x=price)) +
  geom_density()

#DRY: Do not Repeat Yourself
base <- ggplot(diamonds, aes(x=price))
base + geom_histogram()
base + geom_density()    #ดูว่าchartเบ้ไปทางไหน
```

Boxplot

```r
ggplot(diamonds, 
       aes(x=price)) +
  geom_boxplot()
```

One variable + discrete (factor)

- geom_bar() ใช้กับ raw data
- geom_col() ใช้กับ data ที่ aggregate มาแล้ว (ผ่านการ process: count, avg)

```r
ggplot(diamonds, 
       aes(cut)) +
  geom_bar()

diamond %>%
		count(cut) %>%
		ggplot(data = ., mapping = aes(x=cut), y=n)) +
		geom_col()
```

```r
#two variables: number * number
# scatter plot
ggplot(diamonds,
       mapping = aes(carat, price)) + 
  geom_point()
```

Mapping/ Setting

```r
#two variables: number * number
# scatter plot
#setting vs mapping 
set.seed(42) #ล็อกผลลัพธ์ทุกครั้งที่รันโค้ด
ggplot(sample_n(diamonds,500), #สุ่มตัวอย่างข้อมูลมา500จาก50000+ diamonds %>% sample_n(500)
       #mapping
       mapping = aes(carat, price, 
										color=cut, shape=cut)) + #mapping คือปรับจากข้อมูล
  #setting คือปรับจากกราฟ
  geom_point(alpha=0.1, size=2) +
	theme_minimal() + #ลบพื้นหลังออกให้ดูง่าย ๆ
	labs(
		title="My first scatter plot",
		subtitle="Cool ggplot2",
		caption="Data: diamonds in Africa",
		y="Price in USD",
		x="Carat Diamonds"
) #lable
```

ggthemes 

- theme_economist_white()
- theme_economist()
- theme_minimal()
- theme_excel_new()

qplot 

```r
#shortcut qplot()
qplot(x = carat, data = diamonds, geom="density")
qplot(x = carat, data = diamonds, geom="histogram")
qplot(cut, data = diamonds, geom="bar")
```

base-ggplot

```r
#layers in ggplots
base <- ggplot(diamonds %>% sample_n(1000),
               aes(x=carat, y=price))
base + 
   theme_minimal() +
   geom_point() + 
   geom_smooth()
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/62b764cd-f8a9-4508-9e84-f8c548f32db1/c49469f0-f1c5-46e0-bfcd-602ca129bd86/Untitled.png)

```r
base <- ggplot(diamonds %>% 
                 sample_n(1000) %>%
                 filter(carat <= 2.8),
               aes(x=carat, y=price))
base + 
   theme_minimal() +
   geom_point(alpha=0.7, color="blue") + 
   geom_smooth(method="loess", se=TRUE, fill="green",color="pink") +
   geom_rug()

#geom_rug() เอาไว้ดูว่าข้อมูลทับกันตรงไหน 
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/62b764cd-f8a9-4508-9e84-f8c548f32db1/9891a48c-74ba-4b25-9975-8fd09bc42265/Untitled.png)

```r
#bar plot
ggplot(diamonds, aes(cut, fill=cut)) +
  geom_bar() +
  theme_minimal()
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/62b764cd-f8a9-4508-9e84-f8c548f32db1/6968306c-e3a7-40ed-bf43-bb485ebfc638/Untitled.png)

```r
ggplot(diamonds, aes(cut, fill=clarity)) +
  geom_bar(position="dodge") +
  theme_minimal()
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/62b764cd-f8a9-4508-9e84-f8c548f32db1/1047a243-618d-44a1-8108-c1856eb329d3/Untitled.png)

```r
#how to change color
ggplot(diamonds, aes(cut, fill=cut)) +
  geom_bar() +
  theme_minimal() +
  scale_fill_brewer(palette = "Accent")
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/62b764cd-f8a9-4508-9e84-f8c548f32db1/9c787213-f67e-47c3-bb45-84b9c8160138/Untitled.png)

```r
#heat map color scale 
ggplot(diamonds %>%
         sample_frac(0.1), aes(carat, price, color=price)) +
  geom_point(alpha=0.3) +
  theme_minimal() +
  scale_color_gradient(low="gold",high="purple")
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/62b764cd-f8a9-4508-9e84-f8c548f32db1/122600ea-35eb-4663-9b61-8c76c67cc7b3/Untitled.png)

```r
#multiple sub-polt
ggplot(diamonds, aes(carat, price)) +
  geom_point(alpha=0.2) +
  geom_smooth() +
  theme_minimal() +
  facet_wrap(~cut, ncol=5)
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/62b764cd-f8a9-4508-9e84-f8c548f32db1/9fa61fa8-f93e-4ce6-a96e-b6d422462d72/Untitled.png)

```r
ggplot(diamonds, aes(carat, price)) +
  geom_point(alpha=0.2) +
  geom_smooth() +
  theme_minimal() +
  facet_wrap(~cut, ncol=3)
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/62b764cd-f8a9-4508-9e84-f8c548f32db1/8999f32b-0408-483e-ba6a-fb7be0489991/Untitled.png)

```r
#multiple dataframes

m1 <- mtcars %>% filter(mpg > 30)
m2 <- mtcars %>% filter(mpg <= 20)

ggplot() + 
  geom_point(data=m1, aes(wt,mpg), color="blue") +
  geom_point(data=m2, aes(wt,mpg), color="red")+
  theme_minimal()
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/62b764cd-f8a9-4508-9e84-f8c548f32db1/be2422fd-f53a-422c-87c9-a9e16a20b4f3/Untitled.png)

patchwork

```r
library(patchwork)
p1 <- qplot(hwy, data=mpg, geom="density")
p2 <- qplot(cty, data=mpg, geom="histogram")
p3 <- qplot(cty, hwy, data=mpg, geom="point")
p4 <- qplot(cty, hwy, data=mpg, geom="smooth") 

p1 + p2 + p3 + p4
```

![Untitled](https://prod-files-secure.s3.us-west-2.amazonaws.com/62b764cd-f8a9-4508-9e84-f8c548f32db1/8e770284-717a-4744-90ff-afcb9d8f1c7c/Untitled.png)

```r
(p1 + p2 + p3) / p4
```
